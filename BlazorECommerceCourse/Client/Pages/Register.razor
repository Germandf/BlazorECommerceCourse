@page "/register"
@inject IAuthService _authService

<PageTitle>Register</PageTitle>

<h3>Register</h3>

<EditForm Model="_user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="_user.Email" />
        <ValidationMessage For="() => _user.Email" />
    </div>
    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" type="password" @bind-Value="_user.Password" />
        <ValidationMessage For="() => _user.Password" />
    </div>
    <div class="mb-3">
        <label for="confirm-password">Confirm Password</label>
        <InputText id="confirm-password" class="form-control" type="password" @bind-Value="_user.ConfirmPassword" />
        <ValidationMessage For="() => _user.ConfirmPassword" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <div class="@_messageCssClass">
        <span>@_message</span>
    </div>
</EditForm>

@code {

    private UserRegister _user = new();
    string _message = "";
    string _messageCssClass = "";

    private async Task HandleRegistration()
    {
        var result = await _authService.Register(_user);
        _message = result.Message;
        if (result.Success)
            _messageCssClass = "text-success";
        else
            _messageCssClass = "text-danger";
    }

}
